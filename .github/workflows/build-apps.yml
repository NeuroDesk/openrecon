name: build-apps

on:
  workflow_call:
    inputs:
      applications:
        required: true
        type: string

jobs:
  build:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        application: ${{ fromJSON(inputs.applications) }}
    outputs:
      BUILDDATE: ${{ steps.ENVVARS.outputs.BUILDDATE }}
      IMAGENAME: ${{ steps.IMAGEVARS.outputs.IMAGENAME }}
    steps:
      - uses: actions/checkout@v4
      - name: Set environment variables
        id: ENVVARS
        run: |
          APPLICATION=${{ matrix.application }}
          BUILDDATE=`date +%Y%m%d`
          echo "APPLICATION=$APPLICATION" >> $GITHUB_ENV
          echo "BUILDDATE=$BUILDDATE" >> $GITHUB_ENV
      - name: Build recipes
        run: |
          echo "APPLICATION: $APPLICATION"
          cd recipes/$APPLICATION
          echo `which python`
          /bin/bash ../build.sh
      - name: Set image variables
        id: IMAGEVARS
        run: |
          echo "finding zip file for $APPLICATION:"
          ZIPFILE=`find ./recipes/$APPLICATION -type f -iname "OpenRecon_*_$APPLICATION_*.zip" | head -1`
          echo "ZIPFILE: $ZIPFILE"
          IMAGENAME=$(echo $(basename $ZIPFILE .zip))
          echo "IMAGENAME: $IMAGENAME"
          echo "ZIPFILE=$ZIPFILE" >> $GITHUB_ENV
          echo "IMAGENAME=$IMAGENAME" >> $GITHUB_ENV
      - name : Upload zip file
        run: /bin/bash .github/workflows/upload-zip.sh $ZIPFILE
      - name: Generate job output
        run: |
          echo "The container has been successfully build. To test the container, download and copy to host:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "curl -O https://openrecon.neurodesk.org/${IMAGENAME}.zip" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "#now copy to C:\Program Files\Siemens\Numaris\OperationalManagement\FileTransfer\incoming" >> $GITHUB_STEP_SUMMARY
      - name: Generate issue for new container to test and release
        uses: JasonEtco/create-an-issue@v2
        env: 
          GITHUB_TOKEN: ${{ secrets.NEURODESK_GITHUB_TOKEN_ISSUE_AUTOMATION }}
        with:
          filename: .github/new_container_issue_template.md
